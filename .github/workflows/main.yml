name: Java CI/CD with Gradle

on:
  push:
    branches: [ development_restructure, main, restructure ]
  pull_request:
    branches: [ development_restructure, main, restructure ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: Asdwxytyyn20
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Wait for MySQL to be ready
      run: |
        for i in {1..30}; do
          if mysqladmin ping -h"127.0.0.1" --user="root" --password="Asdwxytyyn20" --silent; then
            break
          fi
          sleep 2
        done

    - name: Create adauang_db database
      run: |
        mysql -h 127.0.0.1 -u root -pAsdwxytyyn20 -e "CREATE DATABASE IF NOT EXISTS adauang_db;"

    # Kalau ada schema.sql atau seeder manual, bisa import di sini:
    # - name: Import schema (opsional)
    #   run: |
    #     mysql -h 127.0.0.1 -u root -pAsdwxytyyn20 adauang_db < path/to/schema.sql

    - name: Build with Gradle
      run: ./gradlew build

    - name: Run Tests
      run: ./gradlew test

    - name: Create distribution package
      run: ./gradlew distZip

    - name: Upload Build Artifacts (distribution)
      uses: actions/upload-artifact@v4
      with:
        name: distribution-zip
        path: build/distributions/*.zip